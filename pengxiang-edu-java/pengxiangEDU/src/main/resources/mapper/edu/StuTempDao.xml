<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.edu.dao.StuTempDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.edu.entity.StuTempEntity" id="stuTempMap">
        <result property="id" column="id"/>
        <result property="stuName" column="stu_name"/>
        <result property="idNumber" column="id_number"/>
        <result property="academyId" column="academy_id"/>
        <result property="expiredMajor" column="expired_major"/>
        <result property="gradeId" column="grade_id"/>
        <result property="classType" column="class_type"/>
        <result property="schoolingLength" column="schooling_length"/>
        <result property="status" column="status"/>
        <result property="idNumberType" column="id_number_type"/>
        <result property="birthday" column="birthday"/>
        <result property="gender" column="gender"/>
        <result property="nation" column="nation"/>
        <result property="nativePlace" column="native_place"/>
        <result property="politicalStatus" column="political_status"/>
        <result property="skillBefore" column="skill_before"/>
        <result property="schoolBefore" column="school_before"/>
        <result property="residenceType" column="residence_type"/>
        <result property="email" column="email"/>
        <result property="admissionSeason" column="admission_season"/>
        <result property="enrollTeacher" column="enroll_teacher"/>
        <result property="enrollTeacherDept" column="enroll_teacher_dept"/>
        <result property="enrollTeacherPhone" column="enroll_teacher_phone"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>



    <select id="idNumberListDto" resultType="io.renren.modules.edu.dto.IdNumberDto">
        select id_number from stu_temp where id_number
    </select>

    <select id="selectStuTempInfo" resultType="io.renren.modules.edu.vo.StuTempVo">
        SELECT temp.*,
               academy.`name` academyName,
               major.`name` majorName,
               grade.`name` gradeName
        FROM stu_temp temp
                 left join sys_dept academy on temp.academy_id = academy.dept_id
                 left join sys_dept major on temp.major_id = major.dept_id
                 left join sys_dept grade on temp.grade_id = grade.dept_id
        <where>
               (
                1 = 1
                AND temp.is_deleted = 0
                   )
            <if test="deptId != null">
                and
                (
                    temp.academy_id = #{deptId} or
                    temp.major_id = #{deptId} or
                    temp.grade_id = #{deptId}
                )
            </if>
            <if test="null != record ">
                <if test=" null != record.id " >
                  AND temp.id = #{record.id}
                </if>
                <if test="null != record.stuName">
                  AND temp.stu_name like concat('%',#{record.stuName},'%')
                </if>
                <if test="null != record.enrollTeacher">
                    AND temp.enroll_teacher like concat('%',#{record.enrollTeacher},'%')
                </if>
                <if test="null != record.classType">
                    AND temp.class_type = #{record.classType}
                </if>
                <if test="null != record.status">
                    AND temp.status = #{record.status}
                </if>
                <if test="null != record.admissionSeason">
                    AND temp.admission_season like   concat('%',#{record.admissionSeason},'%')
                </if>
            </if>
        </where>
    </select>
    <update id="deleteByIds" parameterType="java.util.List" >
        UPDATE stu_temp
        SET is_deleted = 1
        WHERE id IN
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="listAllKey" resultType="io.renren.modules.edu.dto.StuKeyWordDto" >
        SELECT  id AS id,
        id_number AS idNumber,
        stu_name AS stuName
        FROM stu_temp
        <where>
            1 = 1 AND   is_deleted = 0
            <if test="null != keyType and null != keyList and !keyList.isEmpty()">
                <if test="keyType == 1">
                    AND id_number IN
                    <foreach collection="keyList" item="key" open="("  separator="," close=")">
                        #{key}
                    </foreach>
                </if>
                <if test="keyType ==2">
                    AND school_number IN
                    <foreach collection="keyList" item="key" open="("  separator="," close=")">
                        #{key}
                    </foreach>
                </if>
            </if>
        </where>
    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO stu_temp (stu_name, id_number, academy_id, major_id, grade_id, class_type, schooling_length,
        status, id_number_type, birthday, gender, nation, phone, native_place, political_status, edu_before,
        skill_before, school_before, residence_type, email, admission_season, enroll_teacher, enroll_teacher_dept,
        enroll_teacher_phone, create_time, update_time, create_by, update_by, is_deleted)
        VALUES
        <foreach collection="stuList" item="item" separator=",">
            (
            #{item.stuName}, #{item.idNumber}, #{item.academyId}, #{item.majorId}, #{item.gradeId}, #{item.classType},
            #{item.schoolingLength},
            #{item.status}, #{item.idNumberType}, #{item.birthday}, #{item.gender}, #{item.nation}, #{item.nativePlace},
            #{item.politicalStatus}, #{item.phone}, #{item.skillBefore},
            #{item.eduBefore}, #{item.schoolBefore}, #{item.residenceType}, #{item.email}, #{item.admissionSeason},
            #{item.enrollTeacher}, #{item.enrollTeacherDept},
            #{item.enrollTeacherPhone}, #{item.createTime}, #{item.updateTime}, #{item.createBy}, #{item.updateBy},
            #{item.isDeleted})
        </foreach>
    </insert>
</mapper>